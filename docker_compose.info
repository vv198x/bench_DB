version: '3.7'
services:
mongodb_container:
image: mongo:4.4.6
environment:
MONGO_INITDB_ROOT_USERNAME: root
MONGO_INITDB_ROOT_PASSWORD: rootpassword
ports:
- 27017:27017
expose:
- "27017"
volumes:
- mongodb_data_container:/data/db

volumes:
mongodb_data_container:

-----------------------
version: '3.4'
services:
  mariadb:
    image: mariadb:latest
    environment:
      MYSQL_ROOT_PASSWORD: test
      MYSQL_DATABASE: test
      MYSQL_USER: sql
      MYSQL_PASSWORD: test
    logging:
      driver: syslog
      options:
        tag: "{{.DaemonName}}(image={{.ImageName}};name={{.Name}};id={{.ID}})"
    ports:
      - '3306:3306'
    restart: on-failure
    volumes:
     - ${PWD}/mariadb:/var/lib/mysql


https://github.com/docker/compose/releases/download/v2.13.0/docker-compose-linux-x86_64
curl -L "https://github.com/docker/compose/releases/download/v2.13.0/docker-compose-linux-x86_64" -o /usr/local/bin/docker-compose
chmod +x /usr/local/bin/docker-compose
ln -s /usr/local/bin/docker-compose /usr/bin/docker-compose
docker-compose -v
firewall-cmd --zone=public --add-masquerade --permanent
firewall-cmd --reload

    networks:
      - frontend
      - backend
	  
networks:
  frontend:
    driver: bridge         
  backend:
    driver: bridge
	
version: "3.9"
services:
  postgres:
    image: postgres:latest
    environment:
      POSTGRES_DB: "test"
      POSTGRES_USER: "sql"
      POSTGRES_PASSWORD: "test"
      PGDATA: "/var/lib/postgresql/data/pgdata"
    volumes:
      - .:/var/lib/postgresql/data
    ports:
      - "5432:5432"
